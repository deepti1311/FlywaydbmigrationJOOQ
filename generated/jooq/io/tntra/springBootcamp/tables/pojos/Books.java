/*
 * This file is generated by jOOQ.
 */
package io.tntra.springBootcamp.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import java.io.Serializable;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.7",
        "catalog version:_20220912",
        "schema version:flyway_test_20220912"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "books",
    schema = "flyway_test"
)
public class Books implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private String  firstName;
    private String  lastName;
    private Integer age;
    private String  email;

    public Books() {}

    public Books(Books value) {
        this.id = value.id;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.age = value.age;
        this.email = value.email;
    }

    public Books(
        Integer id,
        String  firstName,
        String  lastName,
        Integer age,
        String  email
    ) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.email = email;
    }

    /**
     * Getter for <code>flyway_test.books.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 32)
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>flyway_test.books.id</code>.
     */
    public Books setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>flyway_test.books.first_name</code>.
     */
    @Column(name = "first_name", length = 50)
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>flyway_test.books.first_name</code>.
     */
    public Books setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Getter for <code>flyway_test.books.last_name</code>.
     */
    @Column(name = "last_name", nullable = false, length = 50)
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>flyway_test.books.last_name</code>.
     */
    public Books setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Getter for <code>flyway_test.books.age</code>.
     */
    @Column(name = "age", precision = 32)
    public Integer getAge() {
        return this.age;
    }

    /**
     * Setter for <code>flyway_test.books.age</code>.
     */
    public Books setAge(Integer age) {
        this.age = age;
        return this;
    }

    /**
     * Getter for <code>flyway_test.books.email</code>.
     */
    @Column(name = "email", length = 50)
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>flyway_test.books.email</code>.
     */
    public Books setEmail(String email) {
        this.email = email;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Books other = (Books) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.age == null) {
            if (other.age != null)
                return false;
        }
        else if (!this.age.equals(other.age))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.age == null) ? 0 : this.age.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Books (");

        sb.append(id);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(age);
        sb.append(", ").append(email);

        sb.append(")");
        return sb.toString();
    }
}
